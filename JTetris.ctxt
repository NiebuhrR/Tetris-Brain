#BlueJ class context
comment0.target=JTetris
comment0.text=\nImplementation\ notes\:\n-The\ "currentPiece"\ points\ to\ a\ piece\ that\ is\ncurrently\ falling,\ or\ is\ null\ when\ there\ is\ no\ piece.\n-tick()\ moves\ the\ current\ piece\n-a\ timer\ object\ calls\ tick(DOWN)\ periodically\n-keystrokes\ call\ tick\ with\ LEFT,\ RIGHT,\ etc.\n-Board.undo()\ is\ used\ to\ remove\ the\ piece\ from\ its\nold\ position\ and\ then\ Board.place()\ is\ used\ to\ install\nthe\ piece\ in\ its\ new\ position.\n
comment1.params=width\ height
comment1.target=JTetris(int,\ int)
comment10.params=e
comment10.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment11.params=
comment11.target=void\ stopGame()
comment11.text=\n\ \ \ \ Stops\ the\ game.\n
comment12.params=
comment12.target=void\ startGame()
comment12.text=\n\ \ \ \ Sets\ the\ internal\ state\ and\ starts\ the\ timer\n\ \ \ \ so\ the\ game\ is\ happening.\n
comment13.params=
comment13.target=void\ enableButtons()
comment13.text=\n\ \ \ \ Sets\ the\ enabling\ of\ the\ start/stop\ buttons\n\ \ \ \ based\ on\ the\ gameOn\ state.\n
comment14.params=piece\ x\ y
comment14.target=int\ setCurrent(Piece,\ int,\ int)
comment14.text=\n\ \ \ \ Given\ a\ piece,\ tries\ to\ install\ that\ piece\n\ \ \ \ into\ the\ board\ and\ set\ it\ to\ be\ the\ current\ piece.\n\ \ \ \ Does\ the\ necessary\ repaints.\n\ \ \ \ If\ the\ placement\ is\ not\ possible,\ then\ the\ placement\n\ \ \ \ is\ undone,\ and\ the\ board\ is\ not\ changed.\ The\ board\n\ \ \ \ should\ be\ in\ the\ committed\ state\ when\ this\ is\ called.\n\ \ \ \ Returns\ the\ same\ error\ code\ as\ Board.place().\n
comment15.params=
comment15.target=Piece\ pickNextPiece()
comment15.text=\n\ \ \ \ Selects\ the\ next\ piece\ to\ use\ using\ the\ random\ generator\n\ \ \ \ set\ in\ startGame().\n
comment16.params=
comment16.target=void\ addNewPiece()
comment16.text=\n\ \ \ \ Tries\ to\ add\ a\ new\ random\ at\ the\ top\ of\ the\ board.\n\ \ \ \ Ends\ the\ game\ if\ it's\ not\ possible.\n
comment17.params=verb
comment17.target=void\ computeNewPosition(int)
comment17.text=\n\ \ \ \ Figures\ a\ new\ position\ for\ the\ current\ piece\n\ \ \ \ based\ on\ the\ given\ verb\ (LEFT,\ RIGHT,\ ...).\n\ \ \ \ The\ board\ should\ be\ in\ the\ committed\ state\ --\n\ \ \ \ i.e.\ the\ piece\ should\ not\ be\ in\ the\ board\ at\ the\ moment.\n\ \ \ \ This\ is\ necessary\ so\ dropHeight()\ may\ be\ called\ without\n\ \ \ \ the\ piece\ "hitting\ itself"\ on\ the\ way\ down.\n\n\ \ \ \ Sets\ the\ ivars\ newX,\ newY,\ and\ newPiece\ to\ hold\n\ \ \ \ what\ it\ thinks\ the\ new\ piece\ position\ should\ be.\n\ \ \ \ (Storing\ an\ intermediate\ result\ like\ that\ in\n\ \ \ \ ivars\ is\ a\ little\ tacky.)\n
comment18.params=verb
comment18.target=void\ tick(int)
comment18.text=\n\ \ \ \ Called\ to\ change\ the\ position\ of\ the\ current\ piece.\n\ \ \ \ Each\ key\ press\ call\ this\ once\ with\ the\ verbs\n\ \ \ \ LEFT\ RIGHT\ ROTATE\ DROP\ for\ the\ user\ moves,\n\ \ \ \ and\ the\ timer\ calls\ it\ with\ the\ verb\ DOWN\ to\ move\n\ \ \ \ the\ piece\ down\ one\ square.\n\n\ \ \ \ Before\ this\ is\ called,\ the\ piece\ is\ at\ some\ location\ in\ the\ board.\n\ \ \ \ This\ advances\ the\ piece\ to\ be\ at\ its\ next\ location.\n\n\ \ \ \ Overriden\ by\ the\ brain\ when\ it\ plays.\n
comment19.params=piece\ x\ y
comment19.target=void\ repaintPiece(Piece,\ int,\ int)
comment19.text=\n\ \ \ \ Given\ a\ piece\ and\ a\ position\ for\ the\ piece,\ generates\n\ \ \ \ a\ repaint\ for\ the\ rectangle\ that\ just\ encloses\ the\ piece.\n
comment2.params=e
comment2.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment20.params=
comment20.target=float\ dX()
comment20.text=\n\ \ \ \ Pixel\ helpers.\n\ \ \ \ These\ centralize\ the\ translation\ of\ (x,y)\ coords\n\ \ \ \ that\ refer\ to\ blocks\ in\ the\ board\ to\ (x,y)\ coords\ that\n\ \ \ \ count\ pixels.\ Centralizing\ these\ computations\ here\n\ \ \ \ is\ the\ only\ prayer\ that\ repaintPiece()\ and\ paintComponent()\n\ \ \ \ will\ be\ consistent.\n\n\ \ \ \ The\ +1's\ and\ -2's\ are\ to\ account\ for\ the\ 1\ pixel\n\ \ \ \ rect\ around\ the\ perimeter.\n
comment21.params=
comment21.target=float\ dY()
comment22.params=x
comment22.target=int\ xPixel(int)
comment23.params=y
comment23.target=int\ yPixel(int)
comment24.params=g
comment24.target=void\ paintComponent(java.awt.Graphics)
comment24.text=\n\ \ \ \ Draws\ the\ current\ board\ with\ a\ 1\ pixel\ border\n\ \ \ \ around\ the\ whole\ thing.\ Uses\ the\ pixel\ helpers\n\ \ \ \ above\ to\ map\ board\ coords\ to\ pixel\ coords.\n\ \ \ \ Draws\ rows\ that\ are\ filled\ all\ the\ way\ across\ in\ green.\n
comment25.params=
comment25.target=void\ updateTimer()
comment25.text=\n\ \ \ \ Updates\ the\ timer\ to\ reflect\ the\ current\ setting\ of\ the\ \n\ \ \ \ speed\ slider.\n
comment26.params=
comment26.target=java.awt.Container\ createControlPanel()
comment26.text=\n\ \ \ \ Creates\ the\ panel\ of\ UI\ controls.\n\ \ \ \ This\ code\ is\ very\ repetitive\ --\ the\ GUI/XML\n\ \ \ \ extensions\ in\ Java\ 1.4\ should\ make\ this\ sort\n\ \ \ \ of\ ugly\ code\ less\ necessary.\n
comment27.params=e
comment27.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment28.params=e
comment28.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment29.params=e
comment29.target=void\ stateChanged(javax.swing.event.ChangeEvent)
comment3.params=e
comment3.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment30.params=args
comment30.target=void\ main(java.lang.String[])
comment30.text=\n\ \ \ \ Creates\ a\ Window,\n\ \ \ \ installs\ the\ JTetris\ or\ JBrainTetris,\n\ \ \ \ checks\ the\ testMode\ state,\n\ \ \ \ install\ the\ controls\ in\ the\ WEST.\n
comment31.params=e
comment31.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment32.params=e
comment32.target=void\ windowClosing(java.awt.event.WindowEvent)
comment4.params=e
comment4.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment5.params=e
comment5.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment6.params=e
comment6.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment7.params=e
comment7.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment8.params=e
comment8.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment9.params=e
comment9.target=void\ actionPerformed(java.awt.event.ActionEvent)
numComments=33
