#BlueJ class context
comment0.target=JTetrisTrain
comment0.text=\nImplementation\ notes\:\n-The\ "currentPiece"\ points\ to\ a\ piece\ that\ is\ncurrently\ falling,\ or\ is\ null\ when\ there\ is\ no\ piece.\n-tick()\ moves\ the\ current\ piece\n-a\ timer\ object\ calls\ tick(DOWN)\ periodically\n-keystrokes\ call\ tick\ with\ LEFT,\ RIGHT,\ etc.\n-Board.undo()\ is\ used\ to\ remove\ the\ piece\ from\ its\nold\ position\ and\ then\ Board.place()\ is\ used\ to\ install\nthe\ piece\ in\ its\ new\ position.\n
comment1.params=width\ height
comment1.target=JTetrisTrain(int,\ int)
comment2.params=
comment2.target=void\ stopGame()
comment2.text=\n\ \ \ \ Stops\ the\ game.\n
comment3.params=
comment3.target=void\ startGame()
comment3.text=\n\ \ \ \ Sets\ the\ internal\ state\ and\ starts\ the\ timer\n\ \ \ \ so\ the\ game\ is\ happening.\n
comment4.params=piece\ x\ y
comment4.target=int\ setCurrent(Piece,\ int,\ int)
comment4.text=\n\ \ \ \ Given\ a\ piece,\ tries\ to\ install\ that\ piece\n\ \ \ \ into\ the\ board\ and\ set\ it\ to\ be\ the\ current\ piece.\n\ \ \ \ Does\ the\ necessary\ repaints.\n\ \ \ \ If\ the\ placement\ is\ not\ possible,\ then\ the\ placement\n\ \ \ \ is\ undone,\ and\ the\ board\ is\ not\ changed.\ The\ board\n\ \ \ \ should\ be\ in\ the\ committed\ state\ when\ this\ is\ called.\n\ \ \ \ Returns\ the\ same\ error\ code\ as\ Board.place().\n
comment5.params=
comment5.target=Piece\ pickNextPiece()
comment5.text=\n\ \ \ \ Selects\ the\ next\ piece\ to\ use\ using\ the\ random\ generator\n\ \ \ \ set\ in\ startGame().\n
comment6.params=
comment6.target=void\ addNewPiece()
comment6.text=\n\ \ \ \ Tries\ to\ add\ a\ new\ random\ at\ the\ top\ of\ the\ board.\n\ \ \ \ Ends\ the\ game\ if\ it's\ not\ possible.\n
comment7.params=verb
comment7.target=void\ computeNewPosition(int)
comment7.text=\n\ \ \ \ Figures\ a\ new\ position\ for\ the\ current\ piece\n\ \ \ \ based\ on\ the\ given\ verb\ (LEFT,\ RIGHT,\ ...).\n\ \ \ \ The\ board\ should\ be\ in\ the\ committed\ state\ --\n\ \ \ \ i.e.\ the\ piece\ should\ not\ be\ in\ the\ board\ at\ the\ moment.\n\ \ \ \ This\ is\ necessary\ so\ dropHeight()\ may\ be\ called\ without\n\ \ \ \ the\ piece\ "hitting\ itself"\ on\ the\ way\ down.\n\n\ \ \ \ Sets\ the\ ivars\ newX,\ newY,\ and\ newPiece\ to\ hold\n\ \ \ \ what\ it\ thinks\ the\ new\ piece\ position\ should\ be.\n\ \ \ \ (Storing\ an\ intermediate\ result\ like\ that\ in\n\ \ \ \ ivars\ is\ a\ little\ tacky.)\n
comment8.params=verb
comment8.target=void\ tick(int)
comment8.text=\n\ \ \ \ Called\ to\ change\ the\ position\ of\ the\ current\ piece.\n\ \ \ \ Each\ key\ press\ call\ this\ once\ with\ the\ verbs\n\ \ \ \ LEFT\ RIGHT\ ROTATE\ DROP\ for\ the\ user\ moves,\n\ \ \ \ and\ the\ timer\ calls\ it\ with\ the\ verb\ DOWN\ to\ move\n\ \ \ \ the\ piece\ down\ one\ square.\n\n\ \ \ \ Before\ this\ is\ called,\ the\ piece\ is\ at\ some\ location\ in\ the\ board.\n\ \ \ \ This\ advances\ the\ piece\ to\ be\ at\ its\ next\ location.\n\n\ \ \ \ Overriden\ by\ the\ brain\ when\ it\ plays.\n
comment9.params=args
comment9.target=void\ main(java.lang.String[])
comment9.text=\n\ \ \ \ installs\ the\ JTetris\ or\ JBrainTetris,\n\ \ \ \ checks\ the\ testMode\ state,\n
numComments=10
